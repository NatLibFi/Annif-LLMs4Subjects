Transaktionale Unterstützung kollaborativer Applikationen
In einer Vielzahl von Anwendungsdomänen, beispielsweise im Design oder in der Medienproduktion, sind kollaborative Arbeitsprozesse kaum mehr wegzudenken. In u.U. weltweit verteilten Szenarien arbeiten mehrere gleichberechtigte Nutzer an einem gemeinsamen Projekt. Diese Arbeit stellt den vollständigen Entwurf einer Middleware vor, die es ermöglicht, eine Vielzahl von Anwendungen zum Einsatz in kollaborativen Arbeitsprozessen auf einem gemeinsamen monohierarchisch strukturierten Datenbestand zu befähigen. Hierbei kann wiederum aus einer Vielzahl unterschiedlicher Speicherlösungen zur persistenten Sicherung der Daten gewählt werden. Die dafür erforderlichen Konzepte und Techniken beruhen auf transaktionalen Semantiken. Kollaborative Arbeitsprozesse sind durch spezifische Anforderungen gekennzeichnet. Daher stellt diese Arbeit ein maßgeschneidertes Transaktionsmodell vor, welches gezielt Eigenschaften der geschachtelten Transaktionen sowie der Multi-Level-Transaktionen, der Sagas, der Split&Join-Transaktionen und der dynamischen Aktionen kombiniert, um diese Anforderungen zu erfüllen. Es unterstützt die Spezifikation feingranularer atomarer Einheiten zur Zerlegung der lang andauernden Arbeitsprozesse und die Aufweichung der Isolation, um Ergebnisse eines Nutzers frühzeitig freizugeben und einen Informationsaustausch in beliebiger Richtung zwischen den Nutzern zu ermöglichen. Dabei wird stets die strikte Konsistenz des Datenbestands und die Dauerhaftigkeit der erfolgreich durchgeführten Änderungen gewahrt. Die weiterhin eingeführte neuartige AUTOCOMPLETE-Metrik unterstützt die dynamische Bildung von Transaktionen zur Laufzeit und ermöglicht eine kontrollierte und automatische Freigabe von Transaktionsergebnissen unter Einbeziehung der Kollaborationsbereitschaft der Nutzer. Die Architektur der Middleware basiert auf dem Shared-Nothing-Ansatz und gestattet so auch den skalierbaren Umgang mit verteilten Szenarien. Unter Einsatz des aspektorientierten Paradigmas ist eine leichte Integration der entwickelten Transaktionssemantiken in die Applikation möglich, ohne deren Quellcode anpassen zu müssen. Zur Durchsetzung der spezifizierten Isolations- und Sichtbarkeitseigenschaften des Transaktionsmodells beherbergt die Middleware geeignete Synchronisationsprotokolle. Hierbei liegt der Fokus dieser Arbeit auf der Ausnutzung der Semantiken des zugrunde liegenden Daten- und Operationsmodells. Dies erlaubt eine feingranulare Konfliktspezifikation, die sich positiv auf den erreichbaren Grad der Parallelität in den Arbeitsprozessen der Nutzer auswirkt. Die genaue Aufschlüsselung semantischer Abhängigkeiten zwischen den Operationen führt zu einem erweiterten Validierungskriterium, welches die Anzahl der Konflikte zwischen Transaktionen zusätzlich reduziert. Die positiven Auswirkungen semantischer Synchronisation auf eine Vielzahl transaktionaler Kennzahlen, z.B. die Transaktionsabbruchrate, werden in praktischen Experimenten nachgewiesen. Zur Gewährleistung der spezifizierten Atomaritäts- und Dauerhaftigkeitseigenschaften des entwickelten Transaktionsmodells in Fehlersituationen diskutiert diese Arbeit Commit- und Recovery-Protokolle, adaptiert geeignete Vertreter auf das entwickelte Transaktionsmodell und gibt Hinweise zum Wiederanlauf einer möglichen Systemumsetzung der Middleware.
