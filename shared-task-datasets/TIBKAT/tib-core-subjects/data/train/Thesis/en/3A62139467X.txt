Model-driven performance measurement and assessment with relational traces
Model Driven Engineering is an emerging approach in software development which argues using models as primary software artifacts. The models can vary from prescriptive ones specified in Domain Specific Modeling Languages (DSMLs), for the domain specific software development (e.g. Graphical User Interfaces DSML), to descriptive models for analysis, such as queuing networks and Petri-nets. The main benefit of such approach is that it reduces the time and effort spent in implementation by transforming the domain specific prescriptive models to the code. Furthermore, performance characteristics of the implementation can be predicted during the design phase with usage of transformation of domain specific constructs to formal mathematical models. For software performance, as an important software Quality of Service attribute, several approaches for prediction exist in MDE. However, MDE still lacks a systematic approach for performance measurement and metrics assessment. This thesis presents MoDePeMART, an approach for Model Driven Performance Measurement and Assessment with Relational Traces. The approach suggests declarative specification of performance metrics in a domain-specific language and the usage of relational databases for storage and metric computation. The approach is evaluated with the implementation of a UML Profile for UML Class and State diagrams and transformations from the profile to a commercial relational database management system. <engl.>
Model Driven Engineering (MDE) ist eine neue Vorgehensweise in der Software-Entwicklung, die Modelle als primäre Software-Artefakte verwendet. Die Modelle variieren zwischen präskriptiven Modellen, die spezifiziert werden durch domainspezifische Modellierungssprachen (DSML) und für domainspezifische Software Entwicklung (z.B. DSML für graphische Benutzeroberflächen) verwendet werden, und deskriptiven Modellen für die Analyse von z.B. Warteschlangen und Petrinetzen. Der größte Vorteil einer solchen Vorgehensweise ist, dass sie die Zeit und den Aufwand bei der Implementierung durch Transformation der domainspezifischen Modelle in den Quellcode reduziert. Darüber hinaus können Leistungsmerkmale der Implementierung während der Entwicklung durch die Nutzung von Transformation domainspezifischer Konstrukte in formale mathematische Modelle vorhergesagt werden. Für die Vorhersage der Leistungsfähigkeit von Software, ein wichtiges Qualitätskriterium von Software, gibt es im MDE verschiedene Ansätze. Allerdings fehlt im MDE bisher ein systematischer Ansatz zur Performanzmessung und Bewertung von Kennzahlen. Diese Arbeit präsentiert MoDePeMART, ein Ansatz über Model Driven Performance Measurement und Assessment mit relationalen Traces. Der Ansatz schlägt die deklarative Spezifikation der Performanzkennzahlen in einer domainspezifischen Sprache und die Nutzung von relationalen Datenbanken für die Speicherung und metrische Berechnung vor. Der Ansatz wird mit der Umsetzung eines UML-Profils für UML-Klassen- und Zustandsdiagramme und Transformationen aus dem Profil zu einem kommerziellen relationalen Datenbank-Management-System evaluiert. <dt.>
