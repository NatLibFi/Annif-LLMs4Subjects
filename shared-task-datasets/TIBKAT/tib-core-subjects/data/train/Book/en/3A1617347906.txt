Quantitative finance : an object-oriented approach in C
Quantitative Finance: An Object-Oriented Approach in C++ provides readers with a foundation in the key methods and models of quantitative finance. Keeping the material as self-contained as possible, the author introduces computational finance with a focus on practical implementation in C++. Through an approach based on C++ classes and templates, the text highlights the basic principles common to various methods and models while the algorithmic implementation guides readers to a more thorough, hands-on understanding. By moving beyond a purely theoretical treatment to the actual implementation of the models using C++, readers greatly enhance their career opportunities in the field.The book also helps readers implement models in a trading or research environment. It presents recipes and extensible code building blocks for some of the most widespread methods in risk management and option pricing.Web ResourceThe author's website provides fully functional C++ code, including additional C++ source files and examples. Although the code is used to illustrate concepts (not as a finished software product), it nevertheless compiles, runs, and deals with full, rather than toy, problems. The website also includes a suite of practical exercises for each chapter covering a range of difficulty levels and problem complexity.
In the forty years since the seminal article by Black and Scholes (1973), quantitative methods have become indispensable in the assessment, pricing and hedging of financial risk. This is most evident in the techniques used to price derivative financial instruments, but permeates all areas of finance. In fact, the option pricing paradigm itself is being increasingly applied in situations that go beyond the traditional calls and puts. In addition to more complex derivatives and structured financial products, which incorporate several sources of risk, option pricing techniques are employed in situations ranging from credit risk assessment to the valuation of real (e.g. plant) investment alternatives. As quantitative finance has become more sophisticated, it has also become more computationally intensive. For most of the techniques to be practically useful, efficient computer implementation is required. The models, especially those incorporating several sources of risk, have also become more complex. Nevertheless, they often exhibit a surprising amount of modularity and commonality in the underlying method and approach. Ideally, one would want to capitalise on this when implementing the models. C++ is the de facto industry standard in quantitative finance, probably for both of these reasons. Especially for models implemented "in-house" at major financial institutions, computationally intensive algorithms are typically coded in C++ and linked into a spreadsheet package serving as a front-end.
