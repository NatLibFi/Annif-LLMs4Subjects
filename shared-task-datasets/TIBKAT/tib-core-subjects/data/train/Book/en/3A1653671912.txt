Requirements Writing for System Engineering
Learn how to create good requirements when designing hardware and software systems. While this book emphasizes writing traditional “shall” statements, it also provides guidance on use case design and creating user stories in support of agile methodologies. The book surveys modeling techniques and various tools that support requirements collection and analysis. You’ll learn to manage requirements, including discussions of document types and digital approaches using spreadsheets, generic databases, and dedicated requirements tools. Good, clear examples are presented, many related to real-world work the author has done during his career. Requirements Writing for System Engineering covers techniques for defining user needs so you can determine which combination of approaches to use for your projects. You’ll also learn how to analyze different development methodologies so that you can determine the advantages and disadvantages of different requirements approaches and implement them correctly as your needs evolve. Unlike most requirements books, Requirements Writing for System Engineering teaches writing both hardware and software requirements because many projects include both areas. To exemplify this approach, two example projects are developed throughout the book, one focusing on hardware and the other on software. This book Presents many techniques for capturing requirements. Demonstrates gap analysis to find missing requirements. Shows how to address both software and hardware, as most projects involve both. Provides extensive examples of “shall” statements, user stories, and use cases. Explains how to supplement or replace traditional requirement statements with user stories and use cases that work well in agile development environments .
Introduction.-Part I: The Foundation of Requirements -- 1. The Importance of Requirements -- 2. What Makes a Good Requirement? -- 3. Specialized Language -- .-Part II: Types of Requirements -- 4. Functional Requirements -- 5. Non-Functional Requirements -- 6. Lists of Items and the Order of Steps and Data Elements -- 7. Data Interfaces and Documents -- 8. Physical Requirements.-Part III: Cradle to Grave Requirements -- 9. How to Collect Requirements -- 10. User Interface Requirements -- 11. Managing Requirements.-Part IV: Alternatives to Shall Requirements -- 12. Supplementing or Replacing Standard Requirements -- 13. User Stories -- 14. Use Cases -- 15. Revisiting Requirement Problems and Their Solutions.-Part V: Appendixes -- 16. A: Acronyms and Abbreviations -- 17. B: Requirements Documents -- 18. C: Section 508 Compliance -- 19: Glossary -- 20. Bibliography.
