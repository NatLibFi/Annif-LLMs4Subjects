Advanced algorithms and data structures
1. Introducing data structures -- 2. Improving priority queues: d-way heaps -- 3. Treaps : using randomization to balance binary search trees -- 4. Bloom filters : reducing the memory for tracking content -- 5. Disjoint sets : sub-linear time processing -- 6. Trie, radix, trie : efficient string search -- 7. Use case : LRU cache -- 8. Nearest neighbors search -- 9. K-d trees : multidimensional data indexing -- 10. Similarity search trees : approximate nearest neighbors search for image retrieval -- 11. Applications of nearest neighbor search -- 12. Clustering -- 13. Parallel clustering : MapReduce and canopy clustering -- 14. An introduction to graphs : finding paths of minimum distance -- 15. Graph embeddings and planarity : drawing graphs with minimal edge intersections -- 16. Gradient descent : optimization problems (not just) on graphs -- 17. Simulated annealing : optimization beyond local minima -- 18. Genetic algorithms : biologically inspired, fast-converging optimization.
Can you improve the speed and efficiency of your applications without investing in new hardware?  Well, yest, you an: Innovations in algorithms and data structures have led to huge advances in application performance.  Pick up this book to discover a collection of advanced algorithms that will make you a more effective developer.  "Advanced algorithms and data structures" introduces a collection of algorithms for complex programming challenges in data analysis, machine learning, and graph computing.  You'll discover cutting-edge approaches to a variety of tricky scenarios.  You'll even learn to design your own data structures for projects that require a custom solution
