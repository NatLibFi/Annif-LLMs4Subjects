Multithreaded JavaScript : concurrency beyond the event loop
Traditionally, JavaScript has been a single-threaded language. Nearly all online forum posts, books, online documentation, and libraries refer to the language as single threaded. Thanks to recent advancements in the language--such as the Atomics and SharedArrayBuffers objects and Web Workers in the browser--JavaScript is now a multi-threaded language. These features will go down as being the biggest paradigm shift for the world's most popular programming language.  Multithreaded JavaScript explores the various features that JavaScript runtimes have at their disposal for implementing multithreaded programming, providing both practical real-world examples, as well as reference material.  Learn what multithreaded programming is and how you can benefit from it Understand the differences between a web worker, a service worker, and a worker thread Know when and when not to use threads in an application Orchestrate communication between threads by leveraging the Atomics object Build high-performance applications using the knowledge you gain from this book Benchmark performance to learn if you'll benefit from multithreading
Thanks to language advancements such as web workers in the browser, JavaScript is now a multithreaded language. What does that mean for you? In this practical book, authors Thomas Hunter II and Bryan English explain JavaScript threads as a programming concept and tool.
