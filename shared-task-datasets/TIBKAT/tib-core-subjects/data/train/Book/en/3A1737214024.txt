Property-based testing with PropEr, Erlang, and Elixir : find bugs before your users do
Property-based testing helps you create better, more solid tests with little code. Use the ProER framework in both Erlang and Elixir, to automatically generate test cases, test stateful programs, and change your software designs for more reliable approaches. Explore the problem space better, validate your assumptions about program behavior, and expose unexpected weaknesses in your design. Write stateless properties, and use default generators to generate test cases automatically. Write custom data generators and discover what your code can or cannot do. Learn when to use property tests and when to stick with example tests. Shrinking test cases to their simpler expressions, and generate relevant data through targeted properties. Uncover bugs with nearly code at all, with properties based on state transitions and fixing state machines
