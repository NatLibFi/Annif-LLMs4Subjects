Objektorientiertes Testen und Testautomatisierung in der Praxis : Konzepte, Techniken und Verfahren
Objektorientierte Software mit ihren spezifischen Fehlerquellen hat die Herausforderungen an die Softwareentwicklung erhöht. Wie können effizient qualitativ gute Programme geschrieben werden? Die Antwort darauf ist heutzutage ein modernes, testgetriebenes Design. Doch wie erreicht man eine minimale Anzahl von Testfällen, die ein Maximum der Fehlermöglichkeiten abdecken? Wie findet man aussagekräftige Testdaten? Wie kann bereits innerhalb der Softwareentwicklung automatisiert getestet werden? Das Buch stellt auf pragmatische Weise klassische und moderne Testtheorien und -verfahren vor. Dabei werden Lösungen für technische, analytische und methodische Probleme sowie zum Test von objektorientierter Software aufgezeigt. Auch auf organisatorische Faktoren und Teststrategien wird eingegangen. Die Umsetzung in der Praxis kann anhand von konkreten Beipielen für JUnit, CppUnit und NUnit nachvollzogen werden. Weiter wird gezeigt, wie der Einsatz von Testmustern den Test von objektorientierter Software erleichtern kann. Da im Zusammenhang mit Objektorientierung die UML als Modellierungssprache immer stärker in den Mittelpunkt rückt, wird exemplarisch dargestellt, wie UML-Diagramme im Rahmen eines inkrementell-iterativen Entwicklungsprozesses für die Testfall-Findung genutzt werden. Zusätzlich werden Lösungen für die Probleme beim Einsatz der UML durch den Versionswechsel von UML 1.* zu 2.0 vorgestellt. Neben der Objektorientierung und der Testautomatisierung liegt ein weiterer Schwerpunkt auf Realtime- und Embedded Systems mit ihren besonderen Anforderungen, u.a. wird der Aspekt der Robustheit behandelt. Auf der Buch-Website www.oo-testen.de finden sich der Sourcode der Beispiele und weitere hilfreiche Informationen zum Thema
