Softwarearchitekturen dokumentieren und kommunizieren : Entwürfe, Entscheidungen und Lösungen nachvollziehbar und wirkungsvoll festhalten
Stefan Zörner arbeitet als Softwarearchitekt und Berater bei embarc in Hamburg. Er wirkt bei Entwurfs- und Umsetzungsfragen mit, unterstützt beim Festhalten von Architektur und beleuchtet Lösungsansätze in Bewertungen. Sein Wissen und seine Erfahrung teilt er regelmäßig in Vorträgen, Artikeln und Workshops.
- Sie erfahren, wie die Dokumentation der Architektur von einer lästigen Pflicht zum integralen Kommunikations- und Arbeitsmittel wird. - Sie lernen, architekturrelevante Einflussfaktoren und zentrale Entscheidungen festzuhalten. - Sie erleben am Beispiel einer Schach-Engine, wie eine nachvollziehbare Architektur entsteht. - Auf der Buchwebsite finden Sie Vorlagen und weitere Informationen zum Thema und zu den Fallbeispielen. - Ihr exklusiver Vorteil: E-Book inside beim Kauf des gedruckten Buches Dokumentation wird oft als lästige Pflicht angesehen und in vielen Softwareprojekten stark vernachlässigt, die Architektur wird manchmal überhaupt nicht beschrieben. Damit das in Ihren Projekten nicht passiert, schlägt dieses Buch praxiserprobte und schlanke Bestandteile für eine wirkungsvolle Architekturdokumentation vor. Anhand eines durchgängigen Beispiels erfahren Sie, wie Sie architekturrelevante Einflussfaktoren erfassen und Ihre Softwarelösung angemessen und ohne Ballast festhalten. Sie lernen nicht nur die Vorgehensweise für das Dokumentieren während des Entwickelns kennen, sondern auch, wie Sie bestehende Systeme im Nachhinein beschreiben. Neben der Methodik diskutiert das Buch auch typische Formate und Werkzeuge wie Wikis, UML-Werkzeuge u.a., mit denen Sie Architekturdokumentation erfassen, verwalten und verbreiten können. Checklisten und Übungsaufgaben geben Ihnen die nötige Sicherheit, um die Architekturdokumentation zu einem integralen Bestandteil in Ihrem Softwarevorhaben zu machen. // Mein Fazit: Es gibt viele Bücher über Softwarearchitektur. Und dieses gehört zu denen, die man gelesen haben sollte, wenn man Softwareprojekte macht. // Phillip Ghadir zur ersten Auflage
