Programmiersprachen : Konzepte, Strukturen und Implementierung in Java
Einleitung -- 1 t.Zero: Deklarative Programmierung -- 2 t.Lisp: Listenbasierte Programmierung -- 3 t.Pascal: Imperative Programmierung -- 4 t.Scheme: Funktionale Programmierung -- 5 t.Lambda: Rein funktionale Programmierung -- 6 t.Java: Objektorientierte Programmierung -- 7 t.Prolog: Logische Programmierung -- A Der Quellcode im Überblick -- Literaturverzeichnis -- Stichwortverzeichnis.
Das Buch lädt dazu ein, sich mit grundlegenden Konzepten und Strukturen von Programmiersprachen zu befassen. Zu diesem Zweck werden sieben kleine Programmiersprachen entwickelt, jeweils mit vollständiger Implementierung in Java, von denen jede für ein Programmierparadigma steht: t.Zero – deklarative Programmierung; t.Lisp – listenbasierte Programmierung; t.Pascal – imperative Programmierung; t.Scheme – funktionale Programmierung; t.Lambda – rein funktionale Programmierung; t.Java – objektorientierte Programmierung; t.Prolog – logische Programmierung; Das „t.“ steht dabei für „tiny“, „toy“ oder auch für „teaching“. Jede dieser Sprachen ist eine Miniaturausgabe ihres Originals, eine Art Lehr- und Lernspielzeug – syntaktisch und semantisch stark vereinfacht, aber doch nur so weit, dass die charakteristische Art, in der jeweiligen Sprache zu denken und zu programmieren, erhalten bleibt. Die Implementierung der sieben Sprachen beruht auf einem gemeinsamen Interpreter-Kern; deshalb ist der Java-Quellcode klein und gut lesbar. Der Quellcode und die Beispiele können von der Webseite zu dem Buch heruntergeladen werden. Zu jeder Sprache wird eine knappe Einführung in die wichtigsten Sprachelemente gegeben, ferner eine Anzahl charakteristischer Anwendungsbeispiele und eine informelle Beschreibung der Implementierung. Das Buch ist geschrieben für Studierende der Informatik und verwandter Fächer sowie für Leserinnen und Leser mit einfachen Java-Vorkenntnissen, die sich für das Innenleben von Programmiersprachen interessieren.
