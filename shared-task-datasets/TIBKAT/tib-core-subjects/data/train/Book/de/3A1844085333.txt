Logische und Methodische Grundlagen der Entwicklung verteilter Systeme
Software- und Systementwicklung erfordern – ausgehend von informellen Problemstellungen – Spezifikationen unter Festlegung der Daten- und Rechenstrukturen, Implementierungen und die Verifikation der Korrektheit. Der erste Band dieser zwei Bände widmet sich der funktionalen und sequentiellen Programmierung. Der vorliegende zweite Band behandelt softwareintensive Systeme und ihre Darstellung durch Zustandsmaschinen, nebenläufige Programme mit gemeinsamen Variablen, Datenflussprogramme, Schnittstellspezifikation, Zeit, Architektur, Prozessmodellierung, Verfeinerung und spezifische Formalismen wie CSP, TLA und prädikative Spezifikation sowie Themen wie Korrektheitsbeweise für Systeme und schrittweise Verfeinerung. Im Buch werden die Grundlagen für eine wissenschaftlich abgesicherte Entwicklung von Systemen gelegt. Der Inhalt Einführung in Grundlagen der Systementwicklung: Verteilte, nebenläufige, interaktive Systeme Zustandsbasierte Systemmodelle, Zustandsmaschinen, attribuierte Zustandsräume Interaktion, Verteilung, Zeit, Schnittstellensicht für interaktive Systeme Komposition, Struktur- und Verteilungssicht, Zeitmodellierung Prozesse, synchroner Nachrichtenaustausch und Verfeinerung, Ablaufsicht Die Zielgruppen Studierende der Informatik im Masterstudium, Doktoranden in der Informatik Praktiker des Softwareengineerings mit Interesse an Grundlagen und Methodik Das Autoren-Team Manfred Broy leitete an der Technischen Universität München den Lehrstuhl Software & Systems Engineering. Er gründete 2009 das Forschungsinstitut für angewandte Softwaretechnik fortiss. Seine wissenschaftlichen Arbeiten zielen auf die formale Fundierung der Konzepte und Methoden des Softwareengineerings als Basis für eine fundierte Entwicklung von Software und softwareintensiven cyber-physischen Systemen. Alexander Malkis ist ein internationaler Forscher im Bereich „formale Methoden“ mit Fokus auf Verifikation, Programmanalyse und Nebenläufigkeit mit Schwerpunk auf Methoden zur Steigerung von Sicherheit, Zuverlässigkeit und Vertrauenswürdigkeit nebenläufiger Programme, Architekturen und Systeme zu entwickeln.
