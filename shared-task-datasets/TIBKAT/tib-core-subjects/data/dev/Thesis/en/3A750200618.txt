Semi-automatic optimiziation of hardware architectures in embedded systems
In this work a semi-automatic approach for the optimization of hardware architectures of safety-critical embedded systems is presented that supports developers in extending already existing systems with additional functionality given as software tasks. A two-tier optimization process explores the design space for valid allocations of the software tasks to the hardware architecture. The method exploits that large embedded systems typically are hierarchically composed of hardware subsystems: A global optimization step computes pre-allocations of all software tasks onto subsystems based on an abstract notion of the computation capacity. Separately for each subsystem, those tasks are then allocated to processors by local optimization steps such that they are schedulable and all constraints are satisfied. For both the global and the local optimization problem exact optimization methods bundled with experimental results are presented. <engl.>
In dieser Arbeit wird ein teil-automatisiertes Verfahren zur Optimierung von sicherheitskritischen eingebetteten Systemen vorgestellt, das Entwickler bei der Erweiterung existierender Systeme um neue Funktionalität in Form von Softwaretasks unterstützt. Ein zweistufiges Optimierungsverfahren durchsucht den Entwurfsraum nach gültigen Allokationen der Tasks auf die Hardware-Architektur. Das Verfahren nutzt aus, dass große eingebettete Systeme oft hierarchisch aus Hardware-Subsystemen aufgebaut sind: Eine globale Optimierung berechnet Vorplatzierungen der Softwaretasks auf Subsysteme, basierend auf einer abstrakten Charakterisierung der Rechenkapazität. In separat für jedes Subsystem durchgeführten lokalen Optimierungsschritten werden diese Tasks dann so auf Prozessoren allokiert, dass sie schedulbar und alle Rahmenbedingungen erfüllt sind. Für das globale und das lokale Optimierungsproblem werden jeweils optimale Verfahren und dazugehörige experimentelle Ergebnisse vorgestellt. <dt.>
