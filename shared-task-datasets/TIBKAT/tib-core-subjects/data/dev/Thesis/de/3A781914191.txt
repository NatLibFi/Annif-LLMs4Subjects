EasyKit : eine Entwicklungsmethodik für das Rapid Engineering miniaturisierter mechatronischer Systeme
Die heutige Entwicklung mechatronischer Systeme ist meist durch einen sequentiellen Entwurfsprozess von Elektronik, Software und Mechanik gekennzeichnet. Gleichzeitig erfordert der domänenspezifische Entwurf häufig Entwicklungswerkzeuge in den einzelnen Fachgebieten, die einen hohen Grad an Expertenwissen erfordern und nur bedingt zueinander kompatibel sind. Die Entwicklungsmethodik EasyKit hat das Ziel, durch eine Modularisierung auf Hard- und Softwareebene diesen Entwicklungsprozess zu vereinfachen. Dem Anwender werden hierfür Werkzeuge zur Verfügung gestellt, in die bereits umfangreiches Expertenwissen eingeflossen ist, so dass er mit einfachen Mitteln und Grundkenntnissen selbstständig die Hard- und Software für mechatronische Systeme entwickeln und aufbauen kann. Die vorliegende Arbeit beschreibt diese Werkzeuge und die damit verbundenen Technologien. Vorgestellt werden verschiedene Möglichkeiten für eine lösbare Verbindung elektronischer Bausteine. Daneben wird ein Schnittstellenkonzept in Form eines außen liegenden Busses aufgezeigt, mit dem elektronische Funktionsträger einfach übereinander gestapelt werden können. Vorhandene Vorlagen für das Leiterplattenlayout und Testadapter unterstützen dieses Vorgehen. Ein weiteres wesentliches Ziel dieser Arbeit ist es, den Entwicklungsprozess zu beschleunigen und wirtschaftlicher zu gestalten. Hierzu wurde ein Drei-Stufen-Modell entwickelt, das einen einfachen Übergang vom Funktionsmuster (Stufe 1) über die Kleinserie (Stufe 2) bis hin zum Serienprodukt (Stufe 3) ermöglicht. Vorliegende Funktionsblöcke in Hard- und Software führen zu einem schnellen Aufbau erster Funktionsmuster. Durch eine Wiederverwendung dieser Funktionsblöcke in allen drei Stufen kann die Überführung vom Funktionsmuster zum Serienprodukt stark beschleunigt werden. Dieses Konzept wurde ebenso auf die Software übertragen. Durch eine grafische Programmieroberfläche und verfügbare Funktionsbibliotheken sind Programme und lauffähige Codes deutlich leichter zu erzeugen. An zwei praktischen Beispielen, einem Temperaturmesssystem und einem geregelten Pneumatikzylinder wird der komplette Entwurfsprozess dargestellt und Vorteile und Nachteile werden aufgezeigt. Ein Kostenvergleich zum konventionellen Vorgehen hebt die wirtschaftlichen Vorteile der Entwicklungsmethodik hervor.
