Vertex-Tracing : interaktives Ray-Tracing durch adaptiv progressives Refinement im Objektraum
Die vorliegende Dissertation beschreibt ein Verfahren zur interaktiv physikalisch exakten Simulation spekularer Reflexionen sowie spekularer Brechungen in virtuellen Umgebungen. Unter dem Begriff Vertex-Tracing wird in dieser Arbeit ein Ansatz vorgestellt, der es durch hybrides Rendering erlaubt, traditionelles Hardware-Rendering mit globalen Beleuchtungsphänomenen zu ergänzen. - Kern des Verfahrens Vertex-Tracing bildet ein adaptiv progressives Ray-Tracing. Im Gegensatz zum Standard-Ray-Tracing besteht das Ziel darin, vorhandene Bildkohärenzen auszunutzen, indem nur diejenigen Pixel (Samples) berechnet werden, die für die Rekonstruktion des Finalbildes erforderlich sind. Die schrittweise Annäherung an das gewünschte Finalbild erfolgt durch Verfeinerung (Refinement) der Geometrie ausgewählter Polyeder. Diese sind Szenenobjekte, die aufgrund ihrer visuellen Charakteristik in Form spekularer Reflexionen oder Brechungen einem Vertex-Tracing unterzogen werden sollen. Ausgangspunkt der Berechnung dieser Objekte stellen ihre Objekt-Vertices dar. Sie bilden jeweils den Aufpunkt eines geschossenen Primärstrahles vom Betrachter und sind zugleich Startpunkt für eine weitere rekursive Strahlenverfolgung im Sinne des klassischen Ray-Tracing. Je nach Bedarf erfolgt das Einfügen neuer Vertices, dass eine schrittweise Verfeinerung der Objektgeometrie nach sich zieht. - Die Rekonstruktion des Finalbildes erfolgt durch bilineare Interpolation mit Hilfe von Graphik-Hardware. Ihre Nutzung gestattet nicht nur ein kombiniertes Rendering mit herkömmlichen OpenGL-Objekten, sondern erlaubt darüber hinaus eine effiziente Behandlung von Texturen im Vertex-Tracing. In diesem Zusammenhang wird ein verzögerter Textur-Lookup vorgestellt. Er verhindert ein vollständiges Sampling von Texturen, das vor allem bei hochfrequenten Texturen einen erheblichen Mehraufwand bedeuten würde. - Im Hinblick auf die Beschleunigung des Verfahrens werden ferner Aspekte einer verteilt, parallelen Berechnung untersucht beziehungsweise umgesetzt. Im Vordergrund steht dabei die Verteilung des Vertex-Tracings im Rechner-Cluster sowie eine Parallelisierung des Algorithmus auf Shared-Memory-Maschinen. Beide Ansätze zeigen, dass trotz des adaptiv progressiven Charakters des Verfahrens Vertex-Tracing ein signifikanter Speed-Up erzielbar ist.
