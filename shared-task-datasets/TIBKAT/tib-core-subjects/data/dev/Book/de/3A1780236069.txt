Python : der Grundkurs
Intro -- Vorwort -- TEIL I Python lernen -- 1 Hello, World! -- 1.1 Python installieren -- Linux -- Windows -- macOS -- 1.2 »Hello, World!« in der Python-Shell -- Python in der Shell kennenlernen -- 1.3 »Hello, World!« als eigenständiges Programm -- VSCode samt Python-Erweiterung installieren -- Das minimalistische Hello-World-Programm -- Noch ein Beispiel -- 1.4 Thonny -- Thonny-Eigenheiten -- »Richtige« Entwicklungsumgebungen -- 1.5 Elementare Syntaxregeln -- Anweisungen -- Blockelemente -- »print« -- »input« -- Module und »import« -- Kommentare -- 1.6 Wiederholungsfragen -- 2 Variablen -- 2.1 Grundregeln -- Variablennamen -- 2.2 Datentypen -- Erkennung des Datentyps -- Angabe des vorgesehenen Datentyps (Type Annotation) -- Mutable oder immutable -- Veränderliche Daten kopieren -- Typumwandlung -- 2.3 Gültigkeitsbereich von Variablen -- 2.4 Wiederholungsfragen -- 3 Operatoren -- 3.1 Überblick -- 3.2 Details und Sonderfälle -- Division -- Zuweisung und Berechnung verbinden -- Zuweisung und Auswertung verbinden (»Assignment Expressions«) -- »in«-Operator -- Binäre versus logische Operatoren -- Short-Circuit-Evaluation -- Operatorhierarchie -- Variablen und Daten vergleichen -- Mehrfachvergleiche -- »operator«-Modul -- Operatoren selbst implementieren -- 3.3 Wiederholungsfragen -- 4 Zahlen -- 4.1 Ganze Zahlen -- Division -- Binäre und hexadezimale Darstellung -- Ganze Zufallszahlen -- 4.2 Fließkommazahlen -- Rundungsfehler -- Zufällige Fließkommazahlen -- 4.3 Komplexe Zahlen, Brüche und Festkommazahlen -- Komplexe Zahlen -- Rationale Zahlen (Brüche) -- Dezimalzahlen -- 4.4 Boolesche Werte -- 4.5 Wiederholungsfragen -- 5 Zeichenketten -- 5.1 Grundregeln -- Zeichenketten aneinanderfügen und vervielfältigen -- Sonderzeichen -- Raw-Zeichenketten -- »chr«- und »ord«-Funktion -- 5.2 Zugriff auf Teilzeichenketten -- »IndexError« -- Schrittweite (Stride).
Diese Python-Einführung konzentriert sich auf das Wesentliche: Sie erfahren, wie Sie die Sprache in eigenen Projekten einsetzen, und lernen alle Grundlagen kennen – Datenstrukturen und Typen, Programmierlogik, den Umgang mit Modulen, die Vorteile der funktionalen und objektorientierten Programmierung. So erfahren Sie praxisgerecht, wie Sie mit Python Daten verarbeiten, den Raspberry Pi ansteuern, wiederkehrende Aufgaben automatisieren und viele andere Probleme lösen.
