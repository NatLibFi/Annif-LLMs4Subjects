Reduce : Software for Algebraic Computation
1.Overview -- 1.1. Variables, values, assignments -- 1.2. The basic operations -- 1.3. Giving commands, getting answers -- 1.4. A first look at CLEAR -- 1.5. WS, SAVEAS, INPUT n -- 1.6. Some built-in functions -- 1.7. NUM and DEN -- 1.8. Differentiation -- 1.9. Integration -- 1.10. FOR … DO -- 1.11. FOR … SUM -- 1.12. FOR … PRODUCT -- 1.13. WHILE … DO -- 1.14. Boolean expressions -- 1.15. REPEAT … UNTIL -- 2. A Harder Look -- 2.1. The SUBSTITUTION function -- 2.2. ARRAY and OPERATOR -- 2.3. Matrices -- 2.4. The COEFF function -- 2.5. FACTORIZE -- 2.6. The SOLVE function -- 2.7. LET and CLEAR -- 2.8. WRITE -- 2.9. Grouping -- 2.10. IF… THEN -- 2.11. PART and setting a PART -- 3. Setting Modes and Options -- 3.1. EXP -- 3.2. GCD -- 3.3. LCM -- 3.4. MCD -- 3.5. RESUBS -- 3.6. ORDER -- 3.7. FACTOR command -- 3.8. FACTOR switch -- 3.9. DIV -- 3.10. RAT -- 3.11. ALLFAC -- 3.12. LIST -- 3.13. NERO -- 3.14. NAT, FORT -- 3.15. PRI -- 3.16. KORDER -- 3.17. Domain modes -- 4. Procedures -- 4.1. Procedures without parameters or RETURN -- 4.2. Procedures with RETURN -- 4.3. Returning multiple values -- 4.4. Procedures with one parameter -- 4.5. Procedures with more than one parameter -- 4.6. Procedures with local variables -- 4.7. Interaction of procedures -- 4.8. Linkage questions -- 4.9. Procedures with GO TO -- 4.10. LET rules as procedures -- 5. Case Studies -- 5.1. Find the variables -- 5.2. Dividing polynomials -- 5.3. LCM, GCD, and the Euclidean Algorithm -- 5.4. Systems of linear equations -- 5.5. Series approximations to quotients -- 5.6. Families of polynomials -- 5.7. Rationalizing denominators -- 5.8. A bug involving surds -- 5.9. Noncommuting symbols -- 6. Running REDUCE -- 6.1. The basics -- 6.2. IN from files -- 6.3. Making corrections -- 6.4. INPUT, RETRY, CMD -- 6.5. OUT, FORT, LINELENGTH -- 6.6. COMPILE, FASLOUT, LOAD -- 6.7. TIME, SHOWTIME -- 6.8. DEFINE -- 6.9. Tracing -- 6.10. Expression input -- 6.11. Lost in LISP?.
CONTRIBUTED BY DR. ANTHONY C. HEARN THE RAND CORPORATION, SANTA MONICA, CALIFORNIA REDUCE is a computer program for algebraic computation that IS III world-wide use by thousands of scientists, engineers, and mathematicians. Although it traces its beginnings to 1963, until recently it has only been available on main-frame computers because of its relatively large resource requirements. In 1980 I predicted (1) that by the mid-1980's it would be possible to obtain personal computers in the $10,000 $20,000 range capable of running REDUCE. I am therefore delighted to see that machines of the power of the IBM PC can now run this system, even though these computers are more modestly priced than my 1980 vision of the personal algebra machine. In addition to the need for the more widespread access that personal computers can now provide, there has been a longstanding need for a textbook to help the beginning user become better acquainted with the system. I am therefore very glad that Dr. Rayna has undertaken to write such a book, just as the era of the REDUCE personal algebra machine is beginning. In order to understand the nature of REDUCE, a little history is in order. In 1963 I met Dr. John McCarthy, the inventor of LISP.
