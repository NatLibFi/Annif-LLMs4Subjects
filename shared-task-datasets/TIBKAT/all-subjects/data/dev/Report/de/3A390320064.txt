Moderne C++ Programmierung : Klassen, Templates, Design Patterns ; mit 397 Listings
C++ ist eine objektorientierte Programmiersprache, neben der Objektorientierung gewinnt aber die generische Programmierung mittels parametrisierbaren Klassen oder Templates zunehmend an Bedeutung, da diese Methode große Vorteile gegenüber der objektorientierten aufweist, wenn es darum geht, wiederverwendbaren Code zu schreiben. Dieses Buch liefert eine fundierte Darstellung des modernen Programmdesigns in C++ gemäß dem ANSI/ISO-Standard. Der Autor gibt dabei zunächst ein kompaktes Repetitorium der grundlegender Sprachelemente von C++ und erläutert dann detailliert die klassische objektorientierte Modellierung sowie die modernen Techniken der generischen Programmierung mittels Templates und Design Patterns. TOC:Der Präprozessor.- Standarddatentypen.- Zeiger.- Arrays.- Referenzen.- Typenkonvertierung.- Operatoren.- Funktionsüberladung.- Inlining.- Klassen.- Attribute.- Methoden.- Konstruktoren.- Destruktoren.- Grundregeln zur Klassendeklaration.- Verschachtelte Typen.- Der Scope-Operator.- "friend"-Deklarationen.- Statische Methoden und Attribute.- Vererbung.- Virtuelle Funktionen und Polymorphismus.- Mehrfachvererbung.- Virtuelle Vererbung.- Operatorüberladung.- Zugriffsoperatoren.- Die Operatoren new und delete.- Exception Handling.- Die Rolle von Patterns und Idiomen.- Modularisierung eines C++ Projektes.- Namensräume.- Generische Programmierung in C++.- Funktionstemplates.- Klassentemplates.- Templatespezialisierung.- Methodentemplates.- Templatestrategien.- Aspektorientierte Programmierung.- Die C++ Standardbibliothek.- Die Streams.- Die STL.- Container, Iteratoren und Algorithmen.- List.- Vector.- Map.- Containeradapter.- Allokatoren.- Die Stringklasse std::string.- Autopointer
