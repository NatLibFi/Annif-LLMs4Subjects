C++17 Quick Syntax Reference : A Pocket Guide to the Language, APIs and Library
This quick C++17 guide is a condensed code and syntax reference to the popular programming language, fully updated for C++17. It presents the essential C++ syntax in a well-organized format that can be used as a handy reference. In the C++17 Quick Syntax Reference, you will find short, simple, and focused code examples. This book includes a well laid out table of contents and a comprehensive index allowing for easy review. You wonâ€™t find any technical jargon, bloated samples, drawn out history lessons, or witty stories in this book. What you will find is a language reference that is concise, to the point and highly accessible. The book is packed with useful information and is a must-have for any C++ programmer. You will: Use template argument deduction for class templates Declare non-type template parameters with auto-folding expressions and auto deduction from braced-init-list Apply lambdas and lambda capture by value Work with inline variables, nested namespaces, structured bindings, and selection statements with initializer Use utf-8 character literals Carry out direct-list initialization of enums Use these new C++17 library features or class templates from std::variant, optional, any, string_view, invoke, apply and more Do splicing for maps and sets, also new to C++17.
1. Hello World -- 2. Compile and Run -- 3. Variables -- 4. Operators -- 5. Pointers -- 6. References -- 7. Arrays -- 8. String -- 9. Conditionals -- 10. Loops -- 11. Functions -- 12. Class -- 13. Constructor -- 14. Inheritance -- 15. Overriding -- 16. Access Levels -- 17. Static -- 18. Enum -- 19. Struct and Union -- 20. Operator Overloading -- 21. Custom Conversions -- 22. Namespaces -- 23. Constants -- 24. Preprocessor -- 25. Exception Handling -- 26. Type Conversions -- 27. Smart Pointers -- 28. Templates -- 29. Headers.
