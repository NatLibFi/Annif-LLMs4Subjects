Ein effizienter Ansatz zur Übersetzung zwischen Service-Protokollen durch die Modellierung von Verhaltensunterschieden
For developers, the integration of service protocols into applications is still a tedious and time-consuming task. This problem can be solved by programming software that converts one protocol to another. Thereby, design-patterns, data transformation technologies or manual coding are used to integrate these protocols. Also, several model-driven solutions can be used that focus on the formal description of protocols to automatically generate converters.  This thesis describes a model-driven approach that has been designed to convert service protocols into each other. The approach focuses on the modeling of the differences between protocols. The differences in the communication behavior are described using patterns, while the state of a service can be described using decision trees. The evaluation contains an analysis of the processing times of the patterns as well as a comparison with other model-driven approaches. <engl.>
Die Integration von Service-Protokollen in Applikationen ist noch immer eine aufwändige und zeitintensive Aufgabe für Entwickler. Bei softwaretechnischen Lösungen wird versucht, dieses Problem mittels Design-Pattern, Datentransformationstechnologien oder manueller Programmierung zu lösen. Modellgetriebene Ansätze konzentrieren sich dagegen auf eine formale Beschreibung der Protokolle, um daraus automatisiert Konverter zu generieren.  In dieser Arbeit wird ein neues Modellierungsverfahren vorgestellt, das speziell für die Konvertierung von Service-Protokollen entwickelt wurde. Der Ansatz konzentriert sich auf die Modellierung von Protokollunterschieden und erlaubt die Beschreibung von Änderungen des Kommunikationsverhaltens mittels Mustern. Darüber hinaus können Zustände durch Entscheidungsbäume abgebildet werden. Neben der Evaluation der Verarbeitungszeiten wird in der Arbeit auch der Aufwand des Modellierungsansatzes gegen eine softwaretechnische Lösung abgeglichen. <dt.>
