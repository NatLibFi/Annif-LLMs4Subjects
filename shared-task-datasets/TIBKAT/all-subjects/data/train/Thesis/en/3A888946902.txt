Average-Case Analyse parametrisierter und probabilistischer Algorithmen
In both Theoretical Computer Science and practical work it is a disappointing outcome if the considered problem is NP complete. There is almost no hope for an efficient algorithm. However, many approaches have been developed to overcome this barrier: - The study of parameterized complexity allows in many cases the concentration of the explosion of the running time in a given parameter. - The behavior of problems not only in the worst case but also in average cases are studied. Or the data to work with is slightly perturbed. Then the concept of a smoothed analysis gives new insides - Also sometimes the use of randomness in the computing process can help to circumvent some obstacles. - And maybe an approximation is also nearly as good as an optimal solution. All these approaches are well studied on its own, but interactions between them, and the use of multiple approaches together, is a mostly unstudied field of research. In this thesis we study a part of these interactions for some test problems. We show that the reduction rules, given by Gramm et al., for the Clique-Cover problem with high probability not only reduce “yes” instances, but solve them entirely. We also consider the paradigm of bounded search trees, which is widely used for parameterizd problems. We find that the expected running time of a simple bounded search tree algorithm is much lower than the worst case bound for FPT problems Vertex-Cover and d-Hitting-Set. For certain sets of parameter values expected FPT running time for the W[1] and W[2] complete problems Clique and Hitting-Set is achieved, too. Furthermore, we study a simple probabilistic generalization of greedy approximation algorithms. For the Vertex-Cover, Hitting-Set, and the Triangle-Vertex-Deletion problem we find that the probabilistic algorithms we give have a substantially smaller expected approximation ratio than their deterministic equivalents. There is also a trade off: With more time one can expect better solutions.
