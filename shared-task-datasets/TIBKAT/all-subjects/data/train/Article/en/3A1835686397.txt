An OCL implementation for model-driven engineering of C++
Unlike traditional development techniques, Model-Driven Software Development utilizes models as the cornerstone of a software development process and the basis for automated generation of required development artifacts. Its goal is to automate transformations between models and source code. The Object Constraint Language (OCL) is a standard method for querying and validating standardized UML or Ecore models. Several toolchains implement this approach, for example the common Eclipse Modeling Framework (EMF). However, most of these solutions are based on Java or are proprietary solutions. A reason for this is that open source implementations for C++ based on an explicit standardized meta-model are still missing, which are necessary to query a model using OCL during runtime. The Model-Driven Engineering for C++ (MDE4CPP) project is an EMF-like, model-driven environment for common Eclipse Ecore and several OMG specifications like UML, fUML, or PSCS. Although already supporting the execution of UML models, the project did not support OCL so far. This paper presents the concept and implementation of OCL4CPP: an OCL parsing tool for checking, querying, and validating Ecore and UML models at run time within MDE4CPP. It describes implementation details as well as the use of the OCL parser for example applications.
