Java : kurz & gut
Intro -- Inhalt -- Vorwort -- Teil I: Sprache -- Kapitel 1: Namenskonventionen -- Akronyme -- Annotationsnamen -- Klassennamen -- Namen von Konstanten -- Enumerationsnamen -- Die Namen generischer Typparameter -- Namen von Instanzvariablen und statischen Variablen -- Interface-Namen -- Methodennamen -- Package-Namen -- Modulnamen -- Namen von Parametern und lokalen Variablen -- Kapitel 2: Lexikalische Elemente -- Unicode und ASCII -- Kompakte Strings -- Kommentare -- SchlÃ¼sselwÃ¶rter -- Bezeichner -- Trennzeichen -- Operatoren -- Literale -- Escape-Sequenzen -- Unicode-WÃ¤hrungssymbole -- Kapitel 3: Grundlegende Typen -- Elementare Typen -- Literale fÃ¼r elementare Typen -- Gleitkommaeinheiten -- Numerische Hochstufung elementarer Typen -- Wrapper-Klassen -- Autoboxing und Unboxing -- Kapitel 4: Referenztypen -- Elementare Typen und Referenztypen im Vergleich -- Vorgabewerte -- Umwandlung von Referenztypen -- Umwandlungen zwischen elementaren Typen und Referenztypen -- Referenztypen an Methoden Ã¼bergeben -- Referenztypen vergleichen -- Referenztypen kopieren -- Speicherallozierung und die Garbage Collection von Referenztypen -- Kapitel 5: Objektorientierte Programmierung -- Klassen und Objekte -- Argumentlisten variabler LÃ¤nge -- Abstrakte Klassen und Methoden -- Statische Datenmember, statische Methoden, statische Konstanten und statische Initialisierer -- Interfaces -- Enumerationen -- Annotationstypen -- Funktionelle Interfaces -- Kapitel 6: Anweisungen und BlÃ¶cke -- Ausdrucksanweisungen -- Die leere Anweisung -- BlÃ¶cke -- Bedingungsanweisungen -- Iterationsanweisungen -- KontrollflussÃ¼bergabe -- synchronized-Anweisungen -- assert-Anweisungen -- Exception-Handling-Anweisungen -- Kapitel 7: Exception-Handling -- Die Exception-Hierarchie -- Checked-/Unchecked-Exceptions und Errors -- Verbreitete Checked-/Unchecked-Exceptions und Errors
Skriptsprachen -- Script-Engine-Implementierungen -- Skriptsprachen und Scripting-Engines einrichten -- Kapitel 18: Date and Time-API -- InteroperabilitÃ¤t mit Ã¤lterem Code -- Regionale Kalender -- ISO-Kalender -- Kapitel 19: Lambda-AusdrÃ¼cke -- Lambda-Grundlagen -- Funktionelle Interfaces mit bestimmten Aufgaben -- Funktionelle Interfaces allgemeiner Natur -- Ressourcen fÃ¼r Lambda-AusdrÃ¼cke -- Kapitel 20: JShell: die Java-Shell -- Der Einstieg -- Snippets -- JShell verwenden -- Features von JShell -- Zusammenfassung der Befehle in JShell -- Kapitel 21: Das Java Module System -- Project Jigsaw -- Java-Module -- Module kompilieren -- Modulares JDK -- jdeps -- Ein Modul definieren -- Ein Paket exportieren -- AbhÃ¤ngigkeiten deklarieren -- Transitive AbhÃ¤ngigkeiten -- Service Provider definieren -- jlink -- Teil III: AnhÃ¤nge -- Anhang A: Â»SprechendeÂ« APIs -- Anhang B: Externe Werkzeuge -- Anhang C: UML-Grundlagen -- Index -- Ãber die Autoren
Exception-Handling-SchlÃ¼sselwÃ¶rter -- Der Exception-Handling-Vorgang -- Eigene Exception-Klassen definieren -- Informationen zu Exceptions ausgeben -- Kapitel 8: Java-Modifizierer -- Zugriffsmodifizierer -- Andere Modifizierer (Nicht-Zugriffsmodifizierer) -- Codieren von Modifizierern -- Teil II: Plattform -- Kapitel 9: Java Platform, Standard Edition -- HÃ¤ufig verwendete Java SE-API- Bibliotheken -- Kapitel 10: Grundbausteine fÃ¼r die Java-Entwicklung -- Java Runtime Environment -- Java Development Kit -- Struktur von Java-Programmen -- Kommandozeilenwerkzeuge -- Classpath -- Kapitel 11: Speicherverwaltung -- Garbage Collector -- Speicherverwaltungswerkzeuge -- Kommandozeilenoptionen -- Die GrÃ¶Ãe des JVM-Heaps Ã¤ndern -- Metaspace -- Interaktion mit der GC -- Kapitel 12: Elementare Eingabe und Ausgabe -- Die Standard-Streams in, out und err -- Klassenhierarchie fÃ¼r die einfache Eingabe und Ausgabe -- Dateien lesen und schreiben -- Sockets lesen und schreiben -- Serialisierung -- Verpacken und Entpacken von Dateien -- Kapitel 13: Die New I/O-API (NIO.2) -- Das Path-Interface -- Die Klasse Files -- ZusÃ¤tzliche Funktionen -- Kapitel 14: NebenlÃ¤ufigkeit -- Threads erstellen -- Thread-ZustÃ¤nde -- Thread-PrioritÃ¤t -- HÃ¤ufig verwendete Methoden -- Synchronisierung -- Concurrent-Package -- Kapitel 15: Java Collections-Framework -- Das Collection-Interface -- Implementierungen -- Methoden des Collections-Frameworks -- Collections-Klassenalgorithmen -- Algorithmuseffizienz -- Das funktionelle Interface Comparator -- Praktische Fabrikmethoden -- Kapitel 16: Generics-Framework -- Generische Klassen und Interfaces -- Konstruktoren mit Generics -- Substitutionsprinzip -- Typparameter, Jokerzeichen und Grenzen -- Das Get- und Put-Prinzip -- Generische Spezialisierung -- Generische Methoden in rohen Typen -- Kapitel 17: Die Java Scripting-API
