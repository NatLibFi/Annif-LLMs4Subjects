Real-Time Web Application Development : With ASP.NET Core, SignalR, Docker, and Azure
Chapter 01 - Designing a Real World Web Application -- Chapter 02 - Introduction to .Net Core -- Chapter 03 - Overview of Azure Storage -- Chapter 04 - Design a Materialize CSS Theme -- Chapter 05 - Test Driven Approach using XUnit.Net -- Chapter 06 - Securing Application with OAuth 2.0 protocol -- Chapter 07 - Master Data Management using Azure Table Storage -- Chapter 08 - Logging and Exception Handling -- Chapter 09 - Navigation using View components -- Chapter 10 - Forms and Validations -- Chapter 11 - Real Time Communication using SignalR -- Chapter 12 - Code Version Control using GitHub Platform -- Chapter 13 - Configure Continuous Build with Travis CI -- Chapter 14 - Creating a Docker Image -- Chapter 15 - Continuous Deployment to Azure Linux Virtual Machines using Docker Cloud.-
Design, develop, and deploy a real-world web application by leveraging modern open source technologies. This book shows you how to use ASP.NET Core to build cross-platform web applications along with SignalR to enrich the application by enabling real-time communication between server and clients. You will use Docker to containerize your application, integrate with GitHub to package the application, and provide continuous deployment to Azureâ€™s IaaS platform.  Along the way, Real-Time Web Application Development covers topics including designing a Materialize CSS theme, using a test-driven development approach with xUnit.net, and securing your application with the OAuth 2.0 protocol. To further your understanding of the technology, you will learn logging and exception handling; navigation using view components; and how to work with forms and validations.  The rich code samples from this book can be used to retrofit or upgrade existing ASP.NET Core applications. You will: Design and develop a real-world web application  Implement security and data storage with OAuth2 and Azure Table Storage Orchestrate real-time notifications through SignalR Use GitHub and Travis CI for continuous integration of code  Master Docker containerization and continuous deployment with Docker Cloud to Azure Linux virtual machines
