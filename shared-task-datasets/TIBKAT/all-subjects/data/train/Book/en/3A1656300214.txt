Troubleshooting Java Performance : Detecting Anti-Patterns with Open Source Tools
Part I: Getting Started with Performance Tuning.- 1. Performance Anti-Patterns -- 2. Modest-sized Tuning Environment -- 3. Metrics: The Antidote to Guesswork.- Part II: Creating Load scripts with Load Testing.- 4. Load Generation Overview -- 5. Invalid Load Tests -- 6. Scalability Yardstick -- 7. JMeter Must-Know Features.- Part III: The P.A.t.h. Checklist and Performance Troubleshooting.- 8. Introduction to the P.A.t.h. Checklist  -- 9. Persistence, the 'P' in P.A.t.h -- 10. Alien Systems, the 'A' in P.A.t.h. -- 11. Threads, the 't' in P.A.t. h. -- 12. Heap, the 'h' in P.A.t.h. -- 13. Conclusion
Troubleshoot the most widespread and pernicious Java performance problems using a set of open-source and freely-available tools that will make you dramatically more productive in finding the root causes of slow performance. This is a brief book that focuses on a small number of performance anti-patterns, and you’ll find that most problems you encounter fit into one of these anti-patterns. The book provides a specific method in a series of steps referred to as the “P.A.t.h. Checklist” that encompasses persistence, alien systems, threads, and heap management. These steps guide you through a troubleshooting process that is repeatable, that you can apply to any performance problem in a Java application. This technique is especially helpful in 'dark' environments with little monitoring. Performance problems are not always localized to Java, but often fall into the realms of database access and server load. This book gives attention to both of these issues through exa mples showing how to identify repetitive SQL, and identify architecture-wide performance problems ahead of production rollout. Learn how to apply load like an expert, and determine how much load to apply to determine whether your system scales. Included are walk-throughs of a dozen server-side performance puzzles that are ready to run on your own machine. Following these examples helps you learn to: Assess the performance health of four main problems areas in a Java system: The P.A.t.h. Checklist presents each area with its own set of plug-it-in-now tools Pinpoint the code at fault for CPU and other bottlenecks without a Java profiler Find memory leaks in just minutes using heapSpank, the author's open-source leak detector utility that is freely available from heapSpank.org The repeatable method provided in this book is an antidote to lackluster average response times that are multi-second throughout the industry. This book prov ides a long absent, easy-to-follow, performance training regimen that will benefit anyone programming in Java.  What You Will Learn: Avoid the 6 most common ways to mess up a load test Determine the exact number of threads to dial into the load generator to test your system's scalability Detect the three most common SQL performance anti-patterns Measure network response times of calls to back-end systems ('alien systems') Identify whether garbage collection performance is healthy or unhealthy and whether delays are caused by problems in the old or new generation, so ...
