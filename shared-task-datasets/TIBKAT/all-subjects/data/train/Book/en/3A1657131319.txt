Handbook of floating-point arithmetic
This handbook is a definitive guide to the effective use of modern floating-point arithmetic, which has considerably evolved, from the frequently inconsistent floating-point number systems of early computing to the recent IEEE 754-2008 standard. Most of computational mathematics depends on floating-point numbers, and understanding their various implementations will allow readers to develop programs specifically tailored for the standardâ€™s technical features. Algorithms for floating-point arithmetic are presented throughout the book and illustrated where possible by example programs which show how these techniques appear in actual coding and design. The volume itself breaks its core topic into four parts: the basic concepts and history of floating-point arithmetic; methods of analyzing floating-point algorithms and optimizing them; implementations of IEEE 754-2008 in hardware and software; and useful extensions to the standard floating-point system, such as interval arithmetic, double- and triple-word arithmetic, operations on complex numbers, and formal verification of floating-point algorithms. This new edition updates chapters to reflect recent changes to programming languages and compilers and the new prevalence of GPUs in recent years. The revisions also add material on fused multiply-add instruction, and methods of extending the floating-point precision. As supercomputing becomes more common, more numerical engineers will need to use number representation to account for trade-offs between various parameters, such as speed, accuracy, and energy consumption. The Handbook of Floating-Point Arithmetic is designed for students and researchers in numerical analysis, programmers of numerical algorithms, compiler designers, and designers of arithmetic operators
Part I: Introduction, Basic Definitions, and Standards -- Introduction -- Definitions and Basic Notations -- Floating-Point Formats and Environment -- Part II: Cleverly Using Floating-Point Arithmetic -- Basic Properties and Algorithms -- Enhanced FP Sums, Dot Products, and Polynomial Values -- Languages and Compilers -- Part III: Implementing Floating-Point Operators -- Algorithms for the Basic Operations -- Hardware Implementation of Floating-Point Arithmetic -- Software Implementation of Floating-Point Arithmetic -- Evaluating Floating-Point Elementary Functions -- Part IV: Extensions -- Complex Numbers -- Interval Arithmetic -- Verifying Floating-Point Arithmetic -- Extending the Precision -- Appendix A: Number Theory Tools -- Appendix B: Previous Standards -- References -- Index
