Quick start guide to Dart programming : create high-performance applications for the web and mobile
Chapter 01: Getting Started with Dart -- Chapter 02: Flow Control and Looping -- Chapter 03: Functions and Objects -- Chapter 04: Inheritance and Mixins in Dart -- Chapter 05: Abstract Class and Methods -- Chapter 06: Anonymous Functions -- Chapter 07: Data Structures and Collections -- Chapter 08: Callable Classes and Exception Handling -- Chapter 09: Dart Packages and Libraries
Get started with Dart and learn to program high-performing, modern applications. This book starts with an introduction to the Dart IDE, after which you will take a look at the various components of the Dart programming language. You will look at types and variables, and get to know the significance of collections and arrays in Dart. Once you've familiarized yourself with the initial components of Dart, you will see how flow of control and looping can be achieved by using if, else, and conditional expressions. Moving on to functions and objects, you will dig deeper into the concepts of object oriented programming to gauge the importance of constructors in Dart. You will then discover more about inheritance and mixins, seeing how they contain methods for use by other classes. After gauging the importance of abstract classes and methods, you will learn more about anonymous functions such as lambdas and closures. You will then take a look at key data structures including lists and maps to aid you in organizing your information for storage and retrieval. After all this youâ€™ll move on to managing exceptions arising from executing your program. Finally, Dart programming relies heavily on libraries to perform a variety of functions. You will cover some of these packages and libraries, including Dart:core and Dart:math, and also build a backend server with the help of the Dart core libraries. You will: Use variables and conditionals in Dart Work with arrays and collections Apply flow control and looping Explore data structures and their use Handle exceptions Use Dart packages and libraries to build a backend server
