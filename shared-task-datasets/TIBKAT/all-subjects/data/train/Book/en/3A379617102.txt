Formal engineering for industrial software development : using the SOFL method ; with 30 tables
In any serious engineering discipline, it would be unthinkable to construct a large system without having a precise notion of what is to be built and without verifying how the system is expected to function. Software engineering is no different in this respect. Formal methods involve the use of mathematical notation and calculus in software development; such methods are difficult to apply to large-scale systems with practical constraints (e.g., limited developer skills, time and budget restrictions, changing requirements). Here Liu claims that formal engineering methods may bridge this gap. He advocates the incorporation of mathematical notation into the software engineering process, thus substantially improving the rigor, comprehensibility and effectiveness of the methods commonly used in industry. This book provides an introduction to the SOFL (Structured Object-Oriented Formal Language) method that was designed and industry-tested by the author. Written in a style suitable for lecture courses or for use by professionals, there are numerous exercises and a significant real-world case study, so the readers are provided with all the knowledge and examples needed to successfully apply the method in their own projects. TOC: 1. Introduction - 2. Propositional Logic - 3. Predicate Logic - 4. The Module - 5. Hierarchical CDFDs and Modules - 6. Explicit Specifications - 7. Basic Data Types - 8. Set Types - 9. Sequence and String Types - 10. Composite and Product Types - 11. Map Types - 12. Union Types - 13. Classes - 14. TheSoftware Development Process - 15. Approaches to Constructing Specifications - 16. A Case Study of Modeling ATM - 17. Rigorous Review - 18. Specification Testing - 19. Transformation from Designs to Programs - 20. Intelligent Software Engineering Environment - Appendix A: Syntax of SOFL
