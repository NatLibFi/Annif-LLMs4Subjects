Geometric algebra for computer science : an object-oriented approach to geometry
In fields such as robotics, computer graphics, and computer games, it is necessary to compute complex interactions of objects in virtual 3D worlds. In a virtual world, there may be thousands of these objects interacting with each other in real-time. Linear algebra (vector math) is traditionally used to perform these calculations, but linear algebra requires long and complex computer programs to implement and can create very difficult programming challenges. Developers of real-time applications spend a lot of time trying to squeeze the last ounce of performance out of them. Geometric algebra (GA) is a new and compact way of representing the geometry of these objects that makes the computation and the programming of them much easier. Once only the domain of academic researchers, this book introduces GA to programmers, shows how it extends from linear algebra, and describes how to model geometries using GA. The last part of the book describes techniques for creating applications. A companion website link is available with GaViewer, a program written in C that allows programming experiments with GA. Geometric Algebra for Computer Science describes what many feel will be the future of geometrical computation. * The first book on Geometric Algebra for programmers in computer graphics and entertainment computing * Written by leaders in the field providing essential information on this new technique for 3D graphics * This full colour book includes a website with GAViewer, a program to experiment with GA
Preface; 1 Introduction; 2 The Spanning Product of Geometric Algebra; 3 The Metric Products of Geometric Algebra; 4 Linear Transformations of Subspaces; 5 The Fundamental Product of Geometric Algebra; 6 Rotations and Reflections as Versors; 7 Homogeneous Models of Geometry; 8 The Conformal Model of Euclidean Geometry; 9 Structure; 10 Using the Geometry; 11 Using the Geometry in a Ray Tracing Application; 12 Implementation; Appendices; A. Glossary; B. Matrices; C. Inferior Inner Products; D. GaViewer
