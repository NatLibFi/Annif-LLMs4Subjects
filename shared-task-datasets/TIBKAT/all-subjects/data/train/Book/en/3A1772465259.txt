React Hooks in action : with suspense and concurrent mode
1. React is evolving -- 2. Managing component state with the useState hook -- 3. Managing component state with the useReducer hook -- 4. Working with side effects -- 5. Managing component state with the useRef hook -- 6. Managing application state -- 7. Managing performance with useMemo -- 8. Managing state with the context API -- 9. Creating your own hooks -- 10. Using third-party hooks -- 11. Code splitting with suspense -- 12. Integrating data fetching with suspense -- 13. Experimenting with useTransition, useDeferredValue, and suspenseList.
Get started with React Hooks and you'll soon have code that's better organized and easier to maintain.  React Hooks are targeted JavaScript functions that let you reuse and share functionality across components.  Use them to split components into smaller functions, manage state and side effects, and access React features without classes-- all without having to rearrange your component hierarchy.  React Hooks in action teaches you to write fast and reusable React components using Hooks.  You'll start by learning to create component code with Hooks.  Next, you'll implement a resource booking application that demonstrates managing local state, application state, and side effects like fetching data.  Code sample and illustrations make learning Hooks easy
