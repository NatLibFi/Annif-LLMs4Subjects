Practical Python Design Patterns : Pythonic Solutions to Common Problems
Become a better, more productive programmer through a series of projects that will help you deeply understand and master each of the design patterns covered. In this book you will learn to write elegant "Pythonic" code to solve common programming problems. You will also experience design thinking, by identifying design patterns that would be helpful given a specific problem or situation. Python is eating the world. In recent years it has become so much more than a mere object-oriented, scripting language. Design patterns help you think of and solve problems in chunks. They help you to stand on the shoulders of the giants who have come before, instead of having to reinvent the wheel. What You Will Learn Craft cleaner code Increase your effectiveness as a programmer Write more "Pythonic" code Solve bigger problems Discover optimal solutions to com mon problems, done in a way that is uniquely "Pythonic." Who This Book Is For  Programmers who are comfortable with Python. It is also guide for people who have mastered other programming languages and who want to make the transition to Python
1: Before We Begin -- 2: Singleton Pattern -- 3: Prototype Pattern -- 4: Factory Pattern -- 5: Builder Pattern -- 6: Adapter Pattern -- 7: Decorator Pattern -- 8: Facade Pattern -- 9: Proxy Pattern -- 10: Chain of Responsibility Pattern -- 11: Command Pattern -- 12: Interpreter Pattern -- 13: Iterator Pattern -- 14: Observer Pattern -- 15: State Pattern -- 16: Strategy Pattern -- 17: Template Method Pattern -- 18: Visitor Pattern -- 19: Model View Controller Pattern -- 20: Publish-Subscribe Pattern -- Appendix A: Patterns Quick Reference
