Generative Programming and Component Engineering : ACM SIGPLAN/SIGSOFT Conference, GPCE 2002 Pittsburgh, PA, USA, October 6–8, 2002 Proceedings
This volume constitutes the proceedings of the ?rst ACM SIGPLAN/SIGSOFT International Conference on Generative Programming and Component Engine- ing (GPCE 2002), held October 6–8, 2002, in Pittsburgh, PA, USA, as part of the PLI 2002 event, which also included ICFP, PPDP, and a?liated workshops. The future of Software Engineering lies in the automation of tasks that are performed manually today. Generative Programming (developing programs that synthesize other programs), Component Engineering (raising the level of mo- larization and analysis in application design), and Domain-Speci?c Languages (elevating program speci?cations to compact domain-speci?c notations that are easier to write and maintain) are key technologies for automating program de- lopment. In a time of conference and workshop proliferation, GPCE represents acounter-trend in the merging of two distinct communities with strongly ov- lapping interests: the Generative and Component-Based Software Engineering Conference (GCSE) and the International Workshop on the Semantics, App- cations, and Implementation of Program Generation (SAIG). Researchers in the GCSE community address the topic of program automation from a contemporary software engineering viewpoint; SAIG correspondingly represents a community attacking automation from a more formal programming languages viewpoint. Together, their combination provides the depth of theory and practice that one would expect in apremier research conference. Three prominent PLI invited speakers lectured at GPCE 2002: Neil Jones (University of Copenhagen), Catuscia Palamidessi (Penn State University), and Janos Sztipanovits (Vanderbilt University). GPCE 2002 received 39 submissions, of which 18 were accepted.
Invited Papers -- Program Generation, Termination, and Binding-Time Analysis -- Generative Programming for Embedded Systems -- Regular Papers -- Self Reflection for Adaptive Programming -- DataScript- A Specification and Scripting Language for Binary Data -- Memoization in Type-Directed Partial Evaluation -- A Protocol Stack Development Tool Using Generative Programming -- Building Composable Aspect-Specific Languages with Logic Metaprogramming -- Architectural Refactoring in Framework Evolution: A Case Study -- Towards a Modular Program Derivation via Fusion and Tupling -- Generative Programming for Embedded Software: An Industrial Experience Report -- A Framework for the Detection and Resolution of Aspect Interactions -- Aspect-Oriented Modeling: Bridging the Gap between Implementation and Design -- Macros That Compose: Systematic Macro Programming -- Program Termination Analysis in Polynomial Time -- Generators for Synthesis of QoS Adaptation in Distributed Real-Time Embedded Systems -- Optimizing Content Management System Pipelines Separation and Merging of Concerns -- Component-Based Programming for Higher-Order Attribute Grammars -- Altering Java Semantics via Bytecode Manipulation -- Meta-programming with Concrete Object Syntax -- Managing Dynamic Changes in Multi-stage Program Generation Systems.
